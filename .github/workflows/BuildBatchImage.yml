name: Build and Push Batch Image

on:
  push:
    branches:
      - main
    paths:
      - 'scripts/**'
      - 'app/external/**'
      - 'docker/batch/**'
      - 'prisma/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - '.github/workflows/BuildBatchImage.yml'
      
  workflow_dispatch: 
    inputs:
      tag:
        description: 'Custom tag for the image'
        required: false
        default: 'manual'

env:
  REGISTRY: ghcr.io
  # IMAGE_NAME: ${{ github.repository }}/batch
  IMAGE_NAME: trossyou/project_alpha/batch

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:  
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm prisma generate

      - name: Preflight build (tsup)
        run: pnpm run build:scripts

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          # username: ${{ github.actor }}
          # password: ${{ secrets.GITHUB_TOKEN }}
          username: trossyou
          password: ${{ secrets.GHCR_PAT }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event_name == 'workflow_dispatch' }}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/batch/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo ${{ steps.build.outputs.digest }}

